// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)

// @generated by protoc-gen-es v1.9.0
// @generated from file evmos/vesting/v2/tx.proto (package evmos.vesting.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Period } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/vesting/v1beta1/vesting_pb.js";
import type { Coin } from "@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/base/v1beta1/coin_pb.js";

/**
 * MsgCreateClawbackVestingAccount defines a message that enables creating a
 * ClawbackVestingAccount.
 *
 * @generated from message evmos.vesting.v2.MsgCreateClawbackVestingAccount
 */
export declare class MsgCreateClawbackVestingAccount extends Message<MsgCreateClawbackVestingAccount> {
  /**
   * funder_address specifies the account that will be able to fund the vesting account
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress: string;

  /**
   * vesting_address specifies the address that will receive the vesting tokens
   *
   * @generated from field: string vesting_address = 2;
   */
  vestingAddress: string;

  /**
   * enable_gov_clawback specifies whether the governance module can clawback this account
   *
   * @generated from field: bool enable_gov_clawback = 3;
   */
  enableGovClawback: boolean;

  constructor(data?: PartialMessage<MsgCreateClawbackVestingAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgCreateClawbackVestingAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClawbackVestingAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccount;

  static equals(a: MsgCreateClawbackVestingAccount | PlainMessage<MsgCreateClawbackVestingAccount> | undefined, b: MsgCreateClawbackVestingAccount | PlainMessage<MsgCreateClawbackVestingAccount> | undefined): boolean;
}

/**
 * MsgCreateClawbackVestingAccountResponse defines the
 * MsgCreateClawbackVestingAccount response type.
 *
 * @generated from message evmos.vesting.v2.MsgCreateClawbackVestingAccountResponse
 */
export declare class MsgCreateClawbackVestingAccountResponse extends Message<MsgCreateClawbackVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgCreateClawbackVestingAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgCreateClawbackVestingAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClawbackVestingAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccountResponse;

  static equals(a: MsgCreateClawbackVestingAccountResponse | PlainMessage<MsgCreateClawbackVestingAccountResponse> | undefined, b: MsgCreateClawbackVestingAccountResponse | PlainMessage<MsgCreateClawbackVestingAccountResponse> | undefined): boolean;
}

/**
 * MsgFundVestingAccount defines a message that enables funding an existing clawback
 * vesting account.
 *
 * @generated from message evmos.vesting.v2.MsgFundVestingAccount
 */
export declare class MsgFundVestingAccount extends Message<MsgFundVestingAccount> {
  /**
   * funder_address specifies the account that funds the vesting account
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress: string;

  /**
   * vesting_address specifies the account that receives the funds
   *
   * @generated from field: string vesting_address = 2;
   */
  vestingAddress: string;

  /**
   * start_time defines the time at which the vesting period begins
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * lockup_periods defines the unlocking schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period lockup_periods = 4;
   */
  lockupPeriods: Period[];

  /**
   * vesting_periods defines the vesting schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period vesting_periods = 5;
   */
  vestingPeriods: Period[];

  constructor(data?: PartialMessage<MsgFundVestingAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgFundVestingAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgFundVestingAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgFundVestingAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgFundVestingAccount;

  static equals(a: MsgFundVestingAccount | PlainMessage<MsgFundVestingAccount> | undefined, b: MsgFundVestingAccount | PlainMessage<MsgFundVestingAccount> | undefined): boolean;
}

/**
 * MsgFundVestingAccountResponse defines the
 * MsgFundVestingAccount response type.
 *
 * @generated from message evmos.vesting.v2.MsgFundVestingAccountResponse
 */
export declare class MsgFundVestingAccountResponse extends Message<MsgFundVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgFundVestingAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgFundVestingAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgFundVestingAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgFundVestingAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgFundVestingAccountResponse;

  static equals(a: MsgFundVestingAccountResponse | PlainMessage<MsgFundVestingAccountResponse> | undefined, b: MsgFundVestingAccountResponse | PlainMessage<MsgFundVestingAccountResponse> | undefined): boolean;
}

/**
 * MsgClawback defines a message that removes unvested tokens from a
 * ClawbackVestingAccount.
 *
 * @generated from message evmos.vesting.v2.MsgClawback
 */
export declare class MsgClawback extends Message<MsgClawback> {
  /**
   * funder_address is the address which funded the account
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress: string;

  /**
   * account_address is the address of the ClawbackVestingAccount to claw back
   * from.
   *
   * @generated from field: string account_address = 2;
   */
  accountAddress: string;

  /**
   * dest_address specifies where the clawed-back tokens should be transferred
   * to. If empty, the tokens will be transferred back to the original funder of
   * the account.
   *
   * @generated from field: string dest_address = 3;
   */
  destAddress: string;

  constructor(data?: PartialMessage<MsgClawback>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgClawback";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClawback;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClawback;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClawback;

  static equals(a: MsgClawback | PlainMessage<MsgClawback> | undefined, b: MsgClawback | PlainMessage<MsgClawback> | undefined): boolean;
}

/**
 * MsgClawbackResponse defines the MsgClawback response type.
 *
 * @generated from message evmos.vesting.v2.MsgClawbackResponse
 */
export declare class MsgClawbackResponse extends Message<MsgClawbackResponse> {
  /**
   * coins is the slice of clawed back coins
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
   */
  coins: Coin[];

  constructor(data?: PartialMessage<MsgClawbackResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgClawbackResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClawbackResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClawbackResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClawbackResponse;

  static equals(a: MsgClawbackResponse | PlainMessage<MsgClawbackResponse> | undefined, b: MsgClawbackResponse | PlainMessage<MsgClawbackResponse> | undefined): boolean;
}

/**
 * MsgUpdateVestingFunder defines a message that updates the funder account of a
 * ClawbackVestingAccount.
 *
 * @generated from message evmos.vesting.v2.MsgUpdateVestingFunder
 */
export declare class MsgUpdateVestingFunder extends Message<MsgUpdateVestingFunder> {
  /**
   * funder_address is the current funder address of the ClawbackVestingAccount
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress: string;

  /**
   * new_funder_address is the new address to replace the existing funder_address
   *
   * @generated from field: string new_funder_address = 2;
   */
  newFunderAddress: string;

  /**
   * vesting_address is the address of the ClawbackVestingAccount being updated
   *
   * @generated from field: string vesting_address = 3;
   */
  vestingAddress: string;

  constructor(data?: PartialMessage<MsgUpdateVestingFunder>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgUpdateVestingFunder";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVestingFunder;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunder;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunder;

  static equals(a: MsgUpdateVestingFunder | PlainMessage<MsgUpdateVestingFunder> | undefined, b: MsgUpdateVestingFunder | PlainMessage<MsgUpdateVestingFunder> | undefined): boolean;
}

/**
 * MsgUpdateVestingFunderResponse defines the MsgUpdateVestingFunder response
 * type.
 *
 * @generated from message evmos.vesting.v2.MsgUpdateVestingFunderResponse
 */
export declare class MsgUpdateVestingFunderResponse extends Message<MsgUpdateVestingFunderResponse> {
  constructor(data?: PartialMessage<MsgUpdateVestingFunderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgUpdateVestingFunderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVestingFunderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunderResponse;

  static equals(a: MsgUpdateVestingFunderResponse | PlainMessage<MsgUpdateVestingFunderResponse> | undefined, b: MsgUpdateVestingFunderResponse | PlainMessage<MsgUpdateVestingFunderResponse> | undefined): boolean;
}

/**
 * MsgConvertVestingAccount defines a message that enables converting a vesting account to an eth account
 *
 * @generated from message evmos.vesting.v2.MsgConvertVestingAccount
 */
export declare class MsgConvertVestingAccount extends Message<MsgConvertVestingAccount> {
  /**
   * vesting_address is the address of the vesting account to convert
   *
   * @generated from field: string vesting_address = 1;
   */
  vestingAddress: string;

  constructor(data?: PartialMessage<MsgConvertVestingAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgConvertVestingAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertVestingAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertVestingAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertVestingAccount;

  static equals(a: MsgConvertVestingAccount | PlainMessage<MsgConvertVestingAccount> | undefined, b: MsgConvertVestingAccount | PlainMessage<MsgConvertVestingAccount> | undefined): boolean;
}

/**
 * MsgConvertVestingAccountResponse defines the MsgConvertVestingAccount response type.
 *
 * @generated from message evmos.vesting.v2.MsgConvertVestingAccountResponse
 */
export declare class MsgConvertVestingAccountResponse extends Message<MsgConvertVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgConvertVestingAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.MsgConvertVestingAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertVestingAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertVestingAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertVestingAccountResponse;

  static equals(a: MsgConvertVestingAccountResponse | PlainMessage<MsgConvertVestingAccountResponse> | undefined, b: MsgConvertVestingAccountResponse | PlainMessage<MsgConvertVestingAccountResponse> | undefined): boolean;
}

