// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)

// @generated by protoc-gen-es v1.9.0
// @generated from file evmos/vesting/v2/events.proto (package evmos.vesting.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * EventCreateClawbackVestingAccount defines the event type
 * for creating a clawback vesting account
 *
 * @generated from message evmos.vesting.v2.EventCreateClawbackVestingAccount
 */
export declare class EventCreateClawbackVestingAccount extends Message<EventCreateClawbackVestingAccount> {
  /**
   * funder is the address of the funder
   *
   * @generated from field: string funder = 1;
   */
  funder: string;

  /**
   * vesting_account is the address of the created vesting account
   *
   * @generated from field: string vesting_account = 2;
   */
  vestingAccount: string;

  constructor(data?: PartialMessage<EventCreateClawbackVestingAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.EventCreateClawbackVestingAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventCreateClawbackVestingAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventCreateClawbackVestingAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventCreateClawbackVestingAccount;

  static equals(a: EventCreateClawbackVestingAccount | PlainMessage<EventCreateClawbackVestingAccount> | undefined, b: EventCreateClawbackVestingAccount | PlainMessage<EventCreateClawbackVestingAccount> | undefined): boolean;
}

/**
 * EventFundVestingAccount defines the event type for funding a vesting account
 *
 * @generated from message evmos.vesting.v2.EventFundVestingAccount
 */
export declare class EventFundVestingAccount extends Message<EventFundVestingAccount> {
  /**
   * funder is the address of the funder
   *
   * @generated from field: string funder = 1;
   */
  funder: string;

  /**
   * coins to be vested
   *
   * @generated from field: string coins = 2;
   */
  coins: string;

  /**
   * start_time is the time when the coins start to vest
   *
   * @generated from field: string start_time = 3;
   */
  startTime: string;

  /**
   * vesting_account is the address of the recipient
   *
   * @generated from field: string vesting_account = 5;
   */
  vestingAccount: string;

  constructor(data?: PartialMessage<EventFundVestingAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.EventFundVestingAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventFundVestingAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventFundVestingAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventFundVestingAccount;

  static equals(a: EventFundVestingAccount | PlainMessage<EventFundVestingAccount> | undefined, b: EventFundVestingAccount | PlainMessage<EventFundVestingAccount> | undefined): boolean;
}

/**
 * EventClawback defines the event type for clawback
 *
 * @generated from message evmos.vesting.v2.EventClawback
 */
export declare class EventClawback extends Message<EventClawback> {
  /**
   * funder is the address of the funder
   *
   * @generated from field: string funder = 1;
   */
  funder: string;

  /**
   * account is the address of the account
   *
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * destination is the address of the destination
   *
   * @generated from field: string destination = 3;
   */
  destination: string;

  constructor(data?: PartialMessage<EventClawback>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.EventClawback";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventClawback;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventClawback;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventClawback;

  static equals(a: EventClawback | PlainMessage<EventClawback> | undefined, b: EventClawback | PlainMessage<EventClawback> | undefined): boolean;
}

/**
 * EventUpdateVestingFunder defines the event type for updating the vesting funder
 *
 * @generated from message evmos.vesting.v2.EventUpdateVestingFunder
 */
export declare class EventUpdateVestingFunder extends Message<EventUpdateVestingFunder> {
  /**
   * funder is the address of the funder
   *
   * @generated from field: string funder = 1;
   */
  funder: string;

  /**
   * account is the address of the account
   *
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * new_funder is the address of the new funder
   *
   * @generated from field: string new_funder = 3;
   */
  newFunder: string;

  constructor(data?: PartialMessage<EventUpdateVestingFunder>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.vesting.v2.EventUpdateVestingFunder";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventUpdateVestingFunder;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventUpdateVestingFunder;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventUpdateVestingFunder;

  static equals(a: EventUpdateVestingFunder | PlainMessage<EventUpdateVestingFunder> | undefined, b: EventUpdateVestingFunder | PlainMessage<EventUpdateVestingFunder> | undefined): boolean;
}

