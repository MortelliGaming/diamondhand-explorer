// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)

// @generated by protoc-gen-es v1.9.0
// @generated from file ethermint/feemarket/v1/query.proto (package ethermint.feemarket.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Params } from "./feemarket_pb.js";

/**
 * QueryParamsRequest defines the request type for querying x/evm parameters.
 *
 * @generated from message ethermint.feemarket.v1.QueryParamsRequest
 */
export const QueryParamsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse defines the response type for querying x/evm parameters.
 *
 * @generated from message ethermint.feemarket.v1.QueryParamsResponse
 */
export const QueryParamsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * QueryBaseFeeRequest defines the request type for querying the EIP1559 base
 * fee.
 *
 * @generated from message ethermint.feemarket.v1.QueryBaseFeeRequest
 */
export const QueryBaseFeeRequest = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryBaseFeeRequest",
  [],
);

/**
 * QueryBaseFeeResponse returns the EIP1559 base fee.
 *
 * @generated from message ethermint.feemarket.v1.QueryBaseFeeResponse
 */
export const QueryBaseFeeResponse = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryBaseFeeResponse",
  () => [
    { no: 1, name: "base_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryBlockGasRequest defines the request type for querying the EIP1559 base
 * fee.
 *
 * @generated from message ethermint.feemarket.v1.QueryBlockGasRequest
 */
export const QueryBlockGasRequest = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryBlockGasRequest",
  [],
);

/**
 * QueryBlockGasResponse returns block gas used for a given height.
 *
 * @generated from message ethermint.feemarket.v1.QueryBlockGasResponse
 */
export const QueryBlockGasResponse = /*@__PURE__*/ proto3.makeMessageType(
  "ethermint.feemarket.v1.QueryBlockGasResponse",
  () => [
    { no: 1, name: "gas", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

